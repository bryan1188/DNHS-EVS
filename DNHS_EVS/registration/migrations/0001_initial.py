# Generated by Django 2.1.5 on 2019-03-02 17:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressBarangay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_barangay', models.CharField(max_length=50, verbose_name='Address Barangay')),
            ],
        ),
        migrations.CreateModel(
            name='AddressMunicipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_municipality', models.CharField(max_length=100, verbose_name='Address Municipality')),
            ],
        ),
        migrations.CreateModel(
            name='AddressProvince',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_province', models.CharField(max_length=100, verbose_name='Address Province')),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_year', models.CharField(max_length=15, null=True, verbose_name='School Year')),
                ('grade_level', models.CharField(max_length=20, null=True, verbose_name='Grade Level')),
                ('section', models.CharField(max_length=20, null=True, verbose_name='Section')),
                ('registered_male_bosy', models.PositiveSmallIntegerField(null=True, verbose_name='Registered Male BoSY')),
                ('registered_female_bosy', models.PositiveSmallIntegerField(null=True, verbose_name='Registered Female BoSY')),
                ('registered_total_bosy', models.PositiveSmallIntegerField(null=True, verbose_name='Registered Total BoSY')),
                ('registered_male_eosy', models.PositiveSmallIntegerField(null=True, verbose_name='Registered Male EoSY')),
                ('registered_female_eosy', models.PositiveSmallIntegerField(null=True, verbose_name='Registered Female EoSY')),
                ('registered_total_eosy', models.PositiveSmallIntegerField(null=True, verbose_name='Registered Total EoSY')),
                ('adviser', models.CharField(max_length=150, null=True, verbose_name='Adviser')),
            ],
            options={
                'ordering': ('school_year', 'grade_level', 'section'),
            },
        ),
        migrations.CreateModel(
            name='ElectionOfficer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
            ],
        ),
        migrations.CreateModel(
            name='EthnicGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ethnic_group', models.CharField(max_length=50, verbose_name='Ethnic Group')),
            ],
        ),
        migrations.CreateModel(
            name='MotherTongue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mother_tongue', models.CharField(max_length=50, verbose_name='Mother Tongue')),
            ],
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('religion', models.CharField(max_length=100, verbose_name='Religion')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_id', models.CharField(default='', max_length=10, verbose_name='School ID')),
                ('school_year', models.CharField(max_length=15, null=True, verbose_name='School Year')),
                ('name', models.CharField(default='', max_length=50, verbose_name='School Name')),
                ('region', models.CharField(default='', max_length=20, verbose_name='Region')),
                ('division', models.CharField(default='', max_length=50, verbose_name='Division')),
                ('principal_name', models.CharField(default='', max_length=150, verbose_name='Principal Name')),
            ],
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(max_length=1, verbose_name='Sex')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lrn', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Learner Reference Number')),
                ('last_name', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Last Name')),
                ('first_name', models.CharField(db_index=True, max_length=50, null=True, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Middle Name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Age')),
                ('address_house_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Address House Number')),
                ('father_name', models.CharField(blank=True, max_length=150, null=True, verbose_name="Father's Name")),
                ('mother_name', models.CharField(blank=True, max_length=150, null=True, verbose_name="Mother's Name")),
                ('guardian_name', models.CharField(blank=True, max_length=150, null=True, verbose_name="Guardian's Name")),
                ('guardian_relationship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Guardian Relationship')),
                ('parent_guardian_contact_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Parent Guardian Contact Number')),
                ('remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Remarks')),
                ('address_barangay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='students', to='registration.AddressBarangay', verbose_name='Address Barangay')),
                ('address_municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='students', to='registration.AddressMunicipality', verbose_name='Address Municipality')),
                ('address_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='students', to='registration.AddressProvince', verbose_name='Address Province')),
                ('classes', models.ManyToManyField(blank=True, to='registration.Class', verbose_name='classes')),
                ('ethnic_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='students', to='registration.EthnicGroup', verbose_name='Ethnic Group')),
                ('mother_tongue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='students', to='registration.MotherTongue', verbose_name='Mother Tongue')),
                ('religion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='students', to='registration.Religion', verbose_name='Religion')),
                ('sex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='students', to='registration.Sex', verbose_name='Sex')),
            ],
            options={
                'ordering': ('last_name', 'first_name', 'middle_name'),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_is_temp', models.BooleanField(default=True, verbose_name='Password Is Temp?')),
                ('profile_pic', models.ImageField(blank=True, default='profile_pics/default_avatar.png', upload_to='profile_pics/')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='students', to='registration.Student', verbose_name='Student')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_query_name='user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='school',
            unique_together={('school_id', 'school_year')},
        ),
        migrations.AddField(
            model_name='electionofficer',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_query_name='student', to='registration.Student', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='class',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes', to='registration.School', verbose_name='School'),
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('school_year', 'grade_level', 'section')},
        ),
    ]
